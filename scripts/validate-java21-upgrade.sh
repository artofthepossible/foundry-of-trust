#!/bin/bash
# Java 21 Upgrade Validation Script

set -euo pipefail

echo "üöÄ Java 21 Upgrade Validation Script"
echo "=================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print status
print_status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        exit 1
    fi
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# 1. Check Maven configuration
echo ""
print_info "Step 1: Validating Maven configuration..."

if grep -q "<java.version>21</java.version>" pom.xml; then
    print_status "Maven configured for Java 21"
else
    echo -e "${RED}‚ùå Maven still configured for older Java version${NC}"
    exit 1
fi

# 2. Check Docker configuration
echo ""
print_info "Step 2: Validating Docker configuration..."

if grep -q "dhi-temurin:21" Dockerfile; then
    print_status "Dockerfile using Java 21 base images"
else
    echo -e "${RED}‚ùå Dockerfile not using Java 21 images${NC}"
    exit 1
fi

# 3. Test Maven build
echo ""
print_info "Step 3: Testing Maven build..."

print_info "Running: ./mvnw clean compile"
./mvnw clean compile -q
print_status "Maven compilation successful"

# 4. Run tests
echo ""
print_info "Step 4: Running tests..."

print_info "Running: ./mvnw test"
./mvnw test -q
print_status "All tests passed"

# 5. Package application
echo ""
print_info "Step 5: Packaging application..."

print_info "Running: ./mvnw package -DskipTests"
./mvnw package -DskipTests -q
print_status "Application packaging successful"

# 6. Check JAR file
echo ""
print_info "Step 6: Validating JAR file..."

if [ -f "target/whale-of-a-time-0.0.1-SNAPSHOT.jar" ]; then
    print_status "JAR file created successfully"
else
    echo -e "${RED}‚ùå JAR file not found${NC}"
    exit 1
fi

# 7. Extract and check Java version from JAR metadata
echo ""
print_info "Step 7: Checking Java version compatibility..."

# Use jar command to check the JAR file
if jar tf target/whale-of-a-time-0.0.1-SNAPSHOT.jar > /dev/null 2>&1; then
    print_status "JAR file is valid and readable"
else
    echo -e "${RED}‚ùå JAR file appears to be corrupted${NC}"
    exit 1
fi

# 8. Test Docker build (optional - only if Docker is available)
echo ""
print_info "Step 8: Testing Docker build (if Docker available)..."

if command -v docker &> /dev/null; then
    print_info "Running: docker build -t foundry-java21-test ."
    if docker build -t foundry-java21-test . > /dev/null 2>&1; then
        print_status "Docker build successful"
        
        # Test Java version in container
        print_info "Checking Java version in container..."
        JAVA_VERSION=$(docker run --rm foundry-java21-test java -version 2>&1 | grep "openjdk version" | grep -o "21\.[0-9]*\.[0-9]*")
        if [ -n "$JAVA_VERSION" ]; then
            print_status "Container running Java $JAVA_VERSION"
        else
            print_warning "Could not verify Java version in container"
        fi
        
        # Clean up test image
        docker rmi foundry-java21-test > /dev/null 2>&1
    else
        print_warning "Docker build failed - check Docker configuration"
    fi
else
    print_warning "Docker not available - skipping Docker build test"
fi

# 9. Check GitHub Actions workflow compatibility
echo ""
print_info "Step 9: Validating GitHub Actions workflow..."

if [ -f ".github/workflows/build-with-vex-embedded.yml" ]; then
    print_status "GitHub Actions workflow found"
else
    print_warning "GitHub Actions workflow not found"
fi

# 10. Summary
echo ""
echo "üéâ Java 21 Upgrade Validation Complete!"
echo "======================================"
echo ""
echo -e "${GREEN}‚úÖ All validation steps passed successfully!${NC}"
echo ""
echo "üìã Summary:"
echo "‚Ä¢ Maven configuration updated to Java 21"
echo "‚Ä¢ Docker images using Java 21"
echo "‚Ä¢ Application builds and tests successfully"
echo "‚Ä¢ JAR file created and validated"
echo "‚Ä¢ Ready for deployment"
echo ""
echo "üöÄ Next steps:"
echo "1. Commit and push changes: git add . && git commit -m 'upgrade: Java 21 update' && git push"
echo "2. Monitor GitHub Actions workflow"
echo "3. Test deployed application"
echo "4. Consider implementing Java 21 features"
echo ""
echo -e "${BLUE}üìö See JAVA21_UPGRADE.md for detailed upgrade information${NC}"