# Default values for foundry-of-trust.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: demonstrationorg/foundry-of-trust
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.1-DHI-fixed"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  # VEX and security annotations
  vex.openvex.dev/embedded: "true"
  vex.openvex.dev/document: "/app/vex.json"
  vex.openvex.dev/schema-version: "v0.2.0"
  security.foundry.dev/sbom: "true"
  security.foundry.dev/provenance: "true"

podLabels:
  app.kubernetes.io/component: web-server
  app.kubernetes.io/part-of: foundry-of-trust

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: foundry-of-trust.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: foundry-of-trust-tls
  #    hosts:
  #      - foundry-of-trust.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: tmp
    emptyDir: {}
  - name: cache
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: cache
    mountPath: /app/cache

nodeSelector: {}

tolerations: []

affinity: {}

# Spring Boot specific configuration
springBoot:
  profiles:
    active: "kubernetes"
  
  # Management endpoints configuration
  management:
    endpoints:
      web:
        exposure:
          include: "health,info,metrics,prometheus"
    endpoint:
      health:
        show-details: "when-authorized"

# Environment variables
env:
  - name: SPRING_PROFILES_ACTIVE
    value: "kubernetes"
  - name: JAVA_OPTS
    value: "-Xms128m -Xmx384m -XX:+UseG1GC"
  - name: SERVER_PORT
    value: "8080"

# ConfigMap for application configuration
config:
  application.yml: |
    spring:
      application:
        name: foundry-of-trust
      profiles:
        active: kubernetes
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
          base-path: /actuator
      endpoint:
        health:
          show-details: when-authorized
          probes:
            enabled: true
    
    server:
      port: 8080
      shutdown: graceful
    
    logging:
      level:
        com.example.whale_of_a_time: INFO
        org.springframework.security: DEBUG